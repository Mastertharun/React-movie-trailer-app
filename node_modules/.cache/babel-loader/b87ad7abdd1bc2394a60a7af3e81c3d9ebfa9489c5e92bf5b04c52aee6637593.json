{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tharu\\\\Downloads\\\\React-movie-trailer-app\\\\movie-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport YouTube from \"react-youtube\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"e6fcd25d55477bb3d5d3e4cedfe19bfe\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [trailerId, setTrailerId] = useState(\"\");\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const response = await axios.get(`${BASE_URL}/movie/popular`, {\n        params: {\n          api_key: API_KEY\n        }\n      });\n      setMovies(response.data.results);\n      setSelectedMovie(response.data.results[0]);\n    };\n    fetchMovies();\n  }, []);\n  const fetchTrailer = async movieId => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/videos`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    const trailer = response.data.results.find(vid => vid.type === \"Trailer\");\n    setTrailerId(trailer ? trailer.key : \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${selectedMovie.backdrop_path})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedMovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedMovie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchTrailer(selectedMovie.id),\n          children: \"Play Trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), trailerId && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerId,\n      className: \"youtube-player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: movie.title,\n          onClick: () => setSelectedMovie(movie)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jElwt6rlpXNpAa+dAKclF40R3z4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","YouTube","jsxDEV","_jsxDEV","API_KEY","BASE_URL","App","_s","movies","setMovies","selectedMovie","setSelectedMovie","trailerId","setTrailerId","fetchMovies","response","get","params","api_key","data","results","fetchTrailer","movieId","trailer","find","vid","type","key","className","children","style","backgroundImage","backdrop_path","title","fileName","_jsxFileName","lineNumber","columnNumber","overview","onClick","id","videoId","map","movie","src","poster_path","alt","_c","$RefreshReg$"],"sources":["C:/Users/tharu/Downloads/React-movie-trailer-app/movie-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport YouTube from \"react-youtube\";\nimport \"./App.css\";\n\nconst API_KEY = \"e6fcd25d55477bb3d5d3e4cedfe19bfe\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [trailerId, setTrailerId] = useState(\"\");\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const response = await axios.get(`${BASE_URL}/movie/popular`, {\n        params: { api_key: API_KEY },\n      });\n      setMovies(response.data.results);\n      setSelectedMovie(response.data.results[0]);\n    };\n    fetchMovies();\n  }, []);\n\n  const fetchTrailer = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/videos`, {\n      params: { api_key: API_KEY },\n    });\n    const trailer = response.data.results.find((vid) => vid.type === \"Trailer\");\n    setTrailerId(trailer ? trailer.key : \"\");\n  };\n\n  return (\n    <div className=\"app\">\n      {selectedMovie && (\n        <div\n          className=\"banner\"\n          style={{\n            backgroundImage: `url(https://image.tmdb.org/t/p/original/${selectedMovie.backdrop_path})`,\n          }}\n        >\n          <div className=\"banner-content\">\n            <h1>{selectedMovie.title}</h1>\n            <p>{selectedMovie.overview}</p>\n            <button onClick={() => fetchTrailer(selectedMovie.id)}>Play Trailer</button>\n          </div>\n        </div>\n      )}\n\n      {trailerId && (\n        <YouTube videoId={trailerId} className=\"youtube-player\" />\n      )}\n\n      <div className=\"movies-grid\">\n        {movies.map((movie) => (\n          <div key={movie.id} className=\"movie-card\">\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n              onClick={() => setSelectedMovie(movie)}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
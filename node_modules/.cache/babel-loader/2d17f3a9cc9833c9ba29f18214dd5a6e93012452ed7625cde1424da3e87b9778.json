{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tharu\\\\Downloads\\\\React-movie-trailer-app\\\\movie-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport Movie from \"./components/Movie\";\nimport Youtube from 'react-youtube';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const MOVIE_API = \"https://api.themoviedb.org/3/\";\n  const SEARCH_API = MOVIE_API + \"search/movie\";\n  const DISCOVER_API = MOVIE_API + \"discover/movie\";\n  const API_KEY = \"e588720192965bd88bddb2ca0700875d\";\n  const BACKDROP_PATH = \"https://image.tmdb.org/t/p/w1280\";\n  const [playing, setPlaying] = useState(false);\n  const [trailer, setTrailer] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async event => {\n    if (event) {\n      event.preventDefault();\n    }\n    const {\n      data\n    } = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey\n      }\n    });\n    console.log(data.results[0]);\n    setMovies(data.results);\n    setMovie(data.results[0]);\n    if (data.results.length) {\n      await fetchMovie(data.results[0].id);\n    }\n  };\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${MOVIE_API}movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos\"\n      }\n    });\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    setMovie(data);\n  };\n  const selectMovie = movie => {\n    fetchMovie(movie.id);\n    setPlaying(false);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n  const renderMovies = () => movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n    selectMovie: selectMovie,\n    movie: movie\n  }, movie.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"center-max-size header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"brand\",\n        children: \"Movie Trailer App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: fetchMovies,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search\",\n          type: \"text\",\n          id: \"search\",\n          onInput: event => setSearchKey(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-search\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), movies.length ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster\",\n        style: {\n          backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${BACKDROP_PATH}${movie.backdrop_path})`\n        },\n        children: playing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Youtube, {\n            videoId: trailer.key,\n            className: \"youtube amru\",\n            containerClassName: \"youtube-container amru\",\n            opts: {\n              width: '100%',\n              height: '100%',\n              playerVars: {\n                autoplay: 1,\n                controls: 0,\n                cc_load_policy: 0,\n                fs: 0,\n                iv_load_policy: 0,\n                modestbranding: 0,\n                rel: 0,\n                showinfo: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPlaying(false),\n            className: \"button close-video\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center-max-size\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster-content\",\n            children: [trailer ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button play-video\",\n              onClick: () => setPlaying(true),\n              type: \"button\",\n              children: \"Play Trailer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 45\n            }, this) : 'Sorry, no trailer available', /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-max-size container\",\n        children: renderMovies()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : 'Sorry, no movies found']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"I+yW9H0v5a1Xod2neXqN2IB2MxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","Movie","Youtube","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","MOVIE_API","SEARCH_API","DISCOVER_API","API_KEY","BACKDROP_PATH","playing","setPlaying","trailer","setTrailer","movies","setMovies","searchKey","setSearchKey","movie","setMovie","title","fetchMovies","event","preventDefault","data","get","params","api_key","query","console","log","results","length","fetchMovie","id","append_to_response","videos","find","vid","name","selectMovie","window","scrollTo","renderMovies","map","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","type","onInput","target","value","style","backgroundImage","backdrop_path","videoId","key","containerClassName","opts","width","height","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","onClick","overview","_c","$RefreshReg$"],"sources":["C:/Users/tharu/Downloads/React-movie-trailer-app/movie-app/src/App.js"],"sourcesContent":["import {useEffect, useState} from \"react\"\nimport './App.css'\nimport axios from 'axios'\nimport Movie from \"./components/Movie\"\nimport Youtube from 'react-youtube'\n\nfunction App() {\n    const MOVIE_API = \"https://api.themoviedb.org/3/\"\n    const SEARCH_API = MOVIE_API + \"search/movie\"\n    const DISCOVER_API = MOVIE_API + \"discover/movie\"\n    const API_KEY = \"e588720192965bd88bddb2ca0700875d\"\n    const BACKDROP_PATH = \"https://image.tmdb.org/t/p/w1280\"\n\n    const [playing, setPlaying] = useState(false)\n    const [trailer, setTrailer] = useState(null)\n    const [movies, setMovies] = useState([])\n    const [searchKey, setSearchKey] = useState(\"\")\n    const [movie, setMovie] = useState({title: \"Loading Movies\"})\n\n    useEffect(() => {\n        fetchMovies()\n    }, [])\n\n    const fetchMovies = async (event) => {\n        if (event) {\n            event.preventDefault()\n        }\n\n        const {data} = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {\n            params: {\n                api_key: API_KEY,\n                query: searchKey\n            }\n        })\n\n        console.log(data.results[0])\n        setMovies(data.results)\n        setMovie(data.results[0])\n\n        if (data.results.length) {\n            await fetchMovie(data.results[0].id)\n        }\n    }\n\n    const fetchMovie = async (id) => {\n        const {data} = await axios.get(`${MOVIE_API}movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n                append_to_response: \"videos\"\n            }\n        })\n\n        if (data.videos && data.videos.results) {\n            const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\")\n            setTrailer(trailer ? trailer : data.videos.results[0])\n        }\n\n        setMovie(data)\n    }\n\n\n    const selectMovie = (movie) => {\n        fetchMovie(movie.id)\n        setPlaying(false)\n        setMovie(movie)\n        window.scrollTo(0, 0)\n    }\n\n    const renderMovies = () => (\n        movies.map(movie => (\n            <Movie\n                selectMovie={selectMovie}\n                key={movie.id}\n                movie={movie}\n            />\n        ))\n    )\n\n    return (\n        <div className=\"App\">\n            <header className=\"center-max-size header\">\n                <span className={\"brand\"}>Movie Trailer App</span>\n                <form className=\"form\" onSubmit={fetchMovies}>\n                    <input className=\"search\" type=\"text\" id=\"search\"\n                           onInput={(event) => setSearchKey(event.target.value)}/>\n                    <button className=\"submit-search\" type=\"submit\"><i className=\"fa fa-search\"></i></button>\n                </form>\n            </header>\n            {movies.length ?\n                <main>\n                    {movie ?\n                        <div className=\"poster\"\n                             style={{backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${BACKDROP_PATH}${movie.backdrop_path})`}}>\n                            {playing ?\n                                <>\n                                    <Youtube\n                                        videoId={trailer.key}\n                                        className={\"youtube amru\"}\n                                        containerClassName={\"youtube-container amru\"}\n                                        opts={\n                                            {\n                                                width: '100%',\n                                                height: '100%',\n                                                playerVars: {\n                                                    autoplay: 1,\n                                                    controls: 0,\n                                                    cc_load_policy: 0,\n                                                    fs: 0,\n                                                    iv_load_policy: 0,\n                                                    modestbranding: 0,\n                                                    rel: 0,\n                                                    showinfo: 0,\n                                                },\n                                            }\n                                        }\n                                    />\n                                    <button onClick={() => setPlaying(false)} className={\"button close-video\"}>Close\n                                    </button>\n                                </> :\n                                <div className=\"center-max-size\">\n                                    <div className=\"poster-content\">\n                                        {trailer ?\n                                            <button className={\"button play-video\"} onClick={() => setPlaying(true)}\n                                                    type=\"button\">Play\n                                                Trailer</button>\n                                            : 'Sorry, no trailer available'}\n                                        <h1>{movie.title}</h1>\n                                        <p>{movie.overview}</p>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        : null}\n\n                    <div className={\"center-max-size container\"}>\n                        {renderMovies()}\n                    </div>\n                </main>\n                : 'Sorry, no movies found'}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
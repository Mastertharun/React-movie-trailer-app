{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tharu\\\\Downloads\\\\React-movie-trailer-app\\\\movie-app\\\\src\\\\components\\\\banner.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Banner = ({\n  selectedMovie,\n  fetchTrailer,\n  trailerId\n}) => {\n  _s();\n  const [playTrailer, setPlayTrailer] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banner\",\n    style: {\n      backgroundImage: playTrailer ? \"none\" : `url(https://image.tmdb.org/t/p/original/${selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.backdrop_path})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      width: \"100%\",\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: playTrailer ? /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerId,\n      opts: {\n        width: \"100%\",\n        height: \"100%\",\n        playerVars: {\n          autoplay: 1\n        }\n      },\n      className: \"youtube-player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          fetchTrailer(selectedMovie.id);\n          setPlayTrailer(true);\n        },\n        children: \"Play Trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(Banner, \"S7I5MNint5CxUZhb6S0rARFsdbc=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["useState","YouTube","jsxDEV","_jsxDEV","Banner","selectedMovie","fetchTrailer","trailerId","_s","playTrailer","setPlayTrailer","className","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","width","height","display","alignItems","justifyContent","children","videoId","opts","playerVars","autoplay","fileName","_jsxFileName","lineNumber","columnNumber","title","overview","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/tharu/Downloads/React-movie-trailer-app/movie-app/src/components/banner.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst Banner = ({ selectedMovie, fetchTrailer, trailerId }) => {\r\n  const [playTrailer, setPlayTrailer] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: playTrailer\r\n          ? \"none\"\r\n          : `url(https://image.tmdb.org/t/p/original/${selectedMovie?.backdrop_path})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {playTrailer ? (\r\n        <YouTube\r\n          videoId={trailerId}\r\n          opts={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            playerVars: { autoplay: 1 },\r\n          }}\r\n          className=\"youtube-player\"\r\n        />\r\n      ) : (\r\n        <div className=\"banner-content\">\r\n          <h1>{selectedMovie?.title}</h1>\r\n          <p>{selectedMovie?.overview}</p>\r\n          <button onClick={() => { fetchTrailer(selectedMovie.id); setPlayTrailer(true); }}>\r\n            Play Trailer\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,aAAa;EAAEC,YAAY;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,oBACEG,OAAA;IACEQ,SAAS,EAAC,QAAQ;IAClBC,KAAK,EAAE;MACLC,eAAe,EAAEJ,WAAW,GACxB,MAAM,GACN,2CAA2CJ,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAES,aAAa,GAAG;MAC9EC,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE,QAAQ;MAC5BC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IAClB,CAAE;IAAAC,QAAA,EAEDb,WAAW,gBACVN,OAAA,CAACF,OAAO;MACNsB,OAAO,EAAEhB,SAAU;MACnBiB,IAAI,EAAE;QACJP,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdO,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAE;MAC5B,CAAE;MACFf,SAAS,EAAC;IAAgB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,gBAEF3B,OAAA;MAAKQ,SAAS,EAAC,gBAAgB;MAAAW,QAAA,gBAC7BnB,OAAA;QAAAmB,QAAA,EAAKjB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE0B;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/B3B,OAAA;QAAAmB,QAAA,EAAIjB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE2B;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC3B,OAAA;QAAQ8B,OAAO,EAAEA,CAAA,KAAM;UAAE3B,YAAY,CAACD,aAAa,CAAC6B,EAAE,CAAC;UAAExB,cAAc,CAAC,IAAI,CAAC;QAAE,CAAE;QAAAY,QAAA,EAAC;MAElF;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAxCIJ,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}